proxy_cache_path  /var/www/cache levels=1:2 keys_zone=proxy-cache:8m max_size=1g inactive=10h;
proxy_temp_path /var/www/cache/tmp;

upstream artifact-api {
    server continuousqa_artifact-api_1:8000 fail_timeout=0;
}

upstream user-api {
    server continuousqa_user-api_1:3000;
}

upstream runner-api {
    server continuousqa_runner-api_1:8000;
}

server {
    listen 80;
    server_name ~.*;

    location ~ ^/docs/ {
        root /usr/src/app/docs;

        rewrite ^/docs/$ /index.html break;
        rewrite ^/docs/(.+)$ /$1 break;
        try_files /$uri =404;
    }

    location ~ ^/artifacts/ {
        try_files $uri @artifact-api;
    }

    location @artifact-api {
        internal;

        proxy_pass http://artifact-api;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_cache proxy-cache;
        proxy_cache_valid  200 302 404 1m;
    }

    location ~ ^/runner/ {
        try_files $uri @runner-api;
    }

    location @runner-api {
        internal;

        proxy_pass http://runner-api;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_cache proxy-cache;
        proxy_cache_valid  200 302 404 1m;
    }

    location ~ ^/builds/ {
        fastcgi_pass continuousqa_build-api_1:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /usr/src/app/web/app.php;
        fastcgi_param HTTPS off;
        fastcgi_read_timeout 2;
    }

    location ~ ^/(connect/github|connected$|profile|disconnect$) {
        try_files $uri @user-api;
    }

    location @user-api {
        internal;

        proxy_pass http://user-api;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

    location ~ ^/(index.html)?$ {
        root /var/www/app;
        index index.html;
    }

    error_log /dev/stderr debug;
    access_log /dev/stdout;
}
