input {
  zeromq {
    topology => "pubsub"
    mode     => "client"
    address  => ["tcp://docker-log-streamer:3000"]
    codec    => "json"
    topic    => "urn"
    type     => "task"
  }
  udp {
    port => "5000"
    type => "service"
  }
}

filter {
  if [type] == "task" {
    mutate {
      rename => { "runnerUrn" => "bucketUrn" }
    }
  }
  elseif [type] == "service" {
    grok {
      match => { "message" => "%{SYSLOG5424PRI}%{NONNEGINT:ver} +(?:%{TIMESTAMP_ISO8601:ts}|-) +(?:%{HOSTNAME:containerid}|-) +(?:%{NOTSPACE:containername}|-) +(?:%{NOTSPACE:proc}|-) +(?:%{WORD:msgid}|-) +(?:%{SYSLOG5424SD:sd}|-|) +%{GREEDYDATA:msg}" }
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
    if !("_grokparsefailure" in [tags]) {
      mutate {
        replace => [ "@source_host", "%{syslog_hostname}" ]
        replace => [ "@message", "%{syslog_message}" ]
      }
    }
    mutate {
      remove_field => [ "syslog_hostname", "syslog_message", "syslog_timestamp" ]
    }
  }
}

output {
  stdout {
    codec => rubydebug
  }

  if [type] == "task" {
    mongodb {
      collection => "logs"
      database   => "logs"
      uri        => "mongodb://mongodb:27017"
      isodate    => true
    }
  }
  elseif [type] == "service" {
    elasticsearch {
      hosts => ["elasticsearch"]
    }
  }
}
